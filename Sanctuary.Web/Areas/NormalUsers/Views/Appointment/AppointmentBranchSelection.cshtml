@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    Layout = "/Areas/NormalUsers/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" href="~/css/AppointmentMaking/MakeAnAppointmentScreenOne.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/AppointmentMaking/ZIPCodeDropdown.css" asp-append-version="true" />

    @*animate.css library*@
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
</head>
<body style="background-color: #50D050 ">
    <div class="container" >
        <div class="row align-items-center justify-content-center" style="overflow: hidden">
            <div id="zipCodeSubmit" class="col-sm d-flex flex-column ">

                <h5>Type a ZIP</h5>

                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" role="switch" id="mapToggle">
                    <label class="form-check-label" for="mapToggle">Turn on/off map for better navigation</label>
                </div>

                <div id="zipCodeDropdown" class=" search-dropdown">
                    <input class="form-control" type="text" id="zipCodeTextField" placeholder="ZIP" autocomplete="off"/>
                    <ul id="dropdownItems" class="dropdown-content"></ul>
                </div>

                <div class="col invalid-feedback">
                    Please select a valid state.
                </div>
            </div>
            
            <div class="col d-flex  justify-content-center" >
                <div id="map" class= "col-6 col-lg-4 mb-2 mt-2 m-lg-2"></div>
            </div>
        </div>
    </div>
</body>
</html>

<script>
    (g => { var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })({
        key: "AIzaSyDP64iLGi8Buh6jRZ6N8JG3ijxuQ-hk7F4",
        v: "beta",
        // Use the 'v' parameter to indicate the version to use (weekly, beta, alpha, etc.).
        // Add other bootstrap parameters as needed, using camel case.
    });
</script>

<script>
    document.addEventListener('click', () => {
        console.log(event.target);
    });
</script>

<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script type="text/javascript" src="~/js/GoogleMaps.js" asp-append-version="true"></script>
<script type="text/javascript" src="~/js/Appointment.js" asp-append-version="true"></script>